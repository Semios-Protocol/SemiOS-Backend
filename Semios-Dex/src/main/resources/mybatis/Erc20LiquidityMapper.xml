<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="semios.dex.mapper.Erc20LiquidityMapper">
    <select id="getErc20SwapVolumeListBySearchWord" resultType="semios.dex.model.dto.response.Erc20ResDto">
        select
        t1.project_id,
        t1.dao_id,
        t1.pair_address,
        t1.erc20_address,
        t1.erc20_name,
        t1.erc20_symbol,
        t1.eth_balance,
        t1.erc20_balance
        from
        (
        select
        project_id,
        dao_id,
        pair_address,
        erc20_block_time,
        erc20_name,
        erc20_symbol,
        erc20_address,
        eth_balance,
        erc20_balance
        from
        erc20_liquidity
        where
        is_del = 0
        and dao_status = 1
        <choose>
            <when test="erc20Address != null and erc20Address != ''">
                and erc20_address = #{erc20Address}
            </when>
            <otherwise>
                <if test="searchWord != null and searchWord != ''">
                    and
                    (erc20_name like concat('%', #{searchWord}, '%')
                    or erc20_symbol like concat('%', #{searchWord}, '%'))
                </if>
            </otherwise>
        </choose>
        ) t1
        left join
        (
        select
        erc20_address,
        sum(eth_amount) as total_volume
        from
        liquidity_transaction
        where
        block_time &gt;= #{startDate}
        and block_time &lt; #{endDate}
        and trade_type &lt;= 2
        group by
        erc20_address
        ) t2
        on
        t1.erc20_address = t2.erc20_address
        order by
        t2.total_volume desc,
        t1.erc20_block_time
        limit #{limit}
    </select>

    <select id="getErc20TokenListBySearchWord" resultType="semios.dex.model.dto.response.Erc20BalanceResDto">
        select
        <if test="userAddress != null and userAddress != ''">
            t2.erc20_balance,
        </if>
        t1.erc20_name,
        t1.erc20_symbol,
        t1.erc20_address
        from
        (
        select
        erc20_name,
        erc20_symbol,
        erc20_address,
        erc20_block_time
        from
        erc20_liquidity
        where
        is_del = 0
        and dao_status = 1
        <choose>
            <when test="erc20Address != null and erc20Address != ''">
                and erc20_address = #{erc20Address}
            </when>
            <otherwise>
                <if test="searchWord != null and searchWord != ''">
                    and
                    (erc20_name like concat('%', #{searchWord}, '%')
                    or erc20_symbol like concat('%', #{searchWord}, '%'))
                </if>
            </otherwise>
        </choose>
        ) t1
        <if test="userAddress != null and userAddress != ''">
            left join
            (
            select
            erc20_address,
            erc20_balance
            from
            user_liquidity_statistics
            where
            user_address = #{userAddress}
            ) t2
            on
            t1.erc20_address = t2.erc20_address
        </if>
        order by
        <if test="userAddress != null and userAddress != ''">
            t2.erc20_balance desc,
        </if>
        t1.erc20_block_time
    </select>

    <select id="getErc20SwapVolumeList" resultType="semios.dex.model.dto.response.Erc20SwapResDto">
        select t1.erc20_address,
               t1.erc20_name,
               t1.erc20_symbol,
               t1.eth_balance,
               t1.erc20_balance,
               t2.total_volume
        from (select erc20_block_time,
                     erc20_name,
                     erc20_symbol,
                     erc20_address,
                     eth_balance,
                     erc20_balance
              from erc20_liquidity
              where is_del = 0
                and dao_status = 1) t1
                 left join
             (select erc20_address,
                     sum(eth_amount) as total_volume
              from liquidity_transaction
              where block_time &gt;= #{startDate}
                and block_time &lt; #{endDate}
                and trade_type &lt;= 2
              group by erc20_address) t2
             on
                 t1.erc20_address = t2.erc20_address
        order by t2.total_volume desc,
                 t1.erc20_block_time desc
    </select>
</mapper>
